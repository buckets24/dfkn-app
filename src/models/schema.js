export const schema = {
  models: {
    ClientModel: {
      name: 'ClientModel',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        sub: {
          name: 'sub',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        firstName: {
          name: 'firstName',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        lastName: {
          name: 'lastName',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        salutation: {
          name: 'salutation',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        email: {
          name: 'email',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        telephone: {
          name: 'telephone',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        fax: {
          name: 'fax',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        mobile: {
          name: 'mobile',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        maritalStatus: {
          name: 'maritalStatus',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        country: {
          name: 'country',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        streetHouseNumber: {
          name: 'streetHouseNumber',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        postCode: {
          name: 'postCode',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        place: {
          name: 'place',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        addressValidDate: {
          name: 'addressValidDate',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        birthPlace: {
          name: 'birthPlace',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        birthday: {
          name: 'birthday',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
        },
        title: {
          name: 'title',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        nationality: {
          name: 'nationality',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        taxId: {
          name: 'taxId',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        emailVerified: {
          name: 'emailVerified',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        active: {
          name: 'active',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        owner: {
          name: 'owner',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        editors: {
          name: 'editors',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        meetings: {
          name: 'meetings',
          isArray: true,
          type: {
            model: 'MeetingModel',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'client',
          },
        },
        onlineDocuments: {
          name: 'onlineDocuments',
          isArray: true,
          type: {
            model: 'OnlineDocumentModel',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'client',
          },
        },
        agentDocuments: {
          name: 'agentDocuments',
          isArray: true,
          type: {
            model: 'OnlineDocumentModel',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'client',
          },
        },
      },
      syncable: true,
      pluralName: 'ClientModels',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'bySub',
            fields: ['sub'],
            queryField: 'getClientBySub',
          },
        },
        {
          type: 'key',
          properties: {
            name: 'byOwner',
            fields: ['owner', 'lastName'],
            queryField: 'getClientsByOwner',
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Admin'],
                operations: ['read', 'delete'],
              },
              {
                provider: 'userPools',
                ownerField: 'owner',
                allow: 'owner',
                operations: ['read', 'update', 'delete'],
                identityClaim: 'cognito:username',
              },
              {
                provider: 'userPools',
                ownerField: 'sub',
                allow: 'owner',
                operations: ['read', 'update'],
                identityClaim: 'cognito:username',
              },
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Director', 'AgentLR2', 'AgentLR1', 'AgentR'],
                operations: ['create'],
              },
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['OfficeManager', 'FinancialAdvisor'],
                operations: ['read', 'update', 'delete'],
              },
              {
                provider: 'userPools',
                ownerField: 'editors',
                allow: 'owner',
                operations: ['read', 'update'],
                identityClaim: 'cognito:username',
              },
              {
                allow: 'public',
                operations: ['read', 'update'],
              },
            ],
          },
        },
      ],
    },
    MeetingModel: {
      name: 'MeetingModel',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        owner: {
          name: 'owner',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        meetingDateTime: {
          name: 'meetingDateTime',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: true,
          attributes: [],
        },
        moderatorId: {
          name: 'moderatorId',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        moderatorName: {
          name: 'moderatorName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        client: {
          name: 'client',
          isArray: false,
          type: {
            model: 'ClientModel',
          },
          isRequired: true,
          attributes: [],
          association: {
            connectionType: 'BELONGS_TO',
            targetName: 'clientId',
          },
        },
        guestAgents: {
          name: 'guestAgents',
          isArray: true,
          type: {
            model: 'GuestAgentMeetingModel',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'meetingId',
          },
        },
        editors: {
          name: 'editors',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        activeDocumentId: {
          name: 'activeDocumentId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        scrollPos: {
          name: 'scrollPos',
          isArray: false,
          type: 'Float',
          isRequired: false,
          attributes: [],
        },
        scrollPosPercent: {
          name: 'scrollPosPercent',
          isArray: false,
          type: 'Float',
          isRequired: false,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'MeetingModels',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byModeratorId',
            fields: ['moderatorId'],
          },
        },
        {
          type: 'key',
          properties: {
            name: 'byOwner',
            fields: ['owner'],
            queryField: 'getMeetingsByOwner',
          },
        },
        {
          type: 'key',
          properties: {
            name: 'byClientId',
            fields: ['clientId'],
            queryField: 'getMeetingsByClientId',
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Admin'],
                operations: ['read', 'delete'],
              },
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Director', 'OfficeManager', 'AgentLR2', 'AgentLR1', 'AgentR', 'FinancialAdvisor'],
                operations: ['create'],
              },
              {
                provider: 'userPools',
                ownerField: 'owner',
                allow: 'owner',
                operations: ['read', 'update', 'delete'],
                identityClaim: 'cognito:username',
              },
              {
                provider: 'userPools',
                ownerField: 'editors',
                allow: 'owner',
                operations: ['read', 'update'],
                identityClaim: 'cognito:username',
              },
            ],
          },
        },
      ],
    },
    GuestAgentMeetingModel: {
      name: 'GuestAgentMeetingModel',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        meetingId: {
          name: 'meetingId',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        agentId: {
          name: 'agentId',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'GuestAgentMeetingModels',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byMeetingId',
            fields: ['meetingId', 'agentId'],
          },
        },
        {
          type: 'key',
          properties: {
            name: 'byAgentId',
            fields: ['agentId', 'meetingId'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Admin'],
                operations: ['read', 'delete'],
              },
              {
                allow: 'public',
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['read'],
              },
            ],
          },
        },
      ],
    },
    OnlineDocumentModel: {
      name: 'OnlineDocumentModel',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        title: {
          name: 'title',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        type: {
          name: 'type',
          isArray: false,
          type: {
            enum: 'OnlineDocumentType',
          },
          isRequired: true,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'OnlineDocumentStatus',
          },
          isRequired: true,
          attributes: [],
        },
        values: {
          name: 'values',
          isArray: false,
          type: 'AWSJSON',
          isRequired: true,
          attributes: [],
        },
        client: {
          name: 'client',
          isArray: false,
          type: {
            model: 'ClientModel',
          },
          isRequired: true,
          attributes: [],
          association: {
            connectionType: 'BELONGS_TO',
            targetName: 'clientId',
          },
        },
        owner: {
          name: 'owner',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        editors: {
          name: 'editors',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        patches: {
          name: 'patches',
          isArray: true,
          type: {
            model: 'DocumentPatch',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'documentId',
          },
        },
        isAgentOnly: {
          name: 'isAgentOnly',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'OnlineDocumentModels',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byClientId',
            fields: ['clientId'],
            queryField: 'getOnlineDocumentsByClientId',
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Admin'],
                operations: ['read', 'delete'],
              },
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Director', 'OfficeManager', 'AgentLR2', 'AgentLR1', 'AgentR', 'FinancialAdvisor'],
                operations: ['create'],
              },
              {
                provider: 'userPools',
                ownerField: 'owner',
                allow: 'owner',
                operations: ['read', 'update', 'delete'],
                identityClaim: 'cognito:username',
              },
              {
                provider: 'userPools',
                ownerField: 'editors',
                allow: 'owner',
                operations: ['read', 'update'],
                identityClaim: 'cognito:username',
              },
              {
                allow: 'public',
                operations: ['read', 'update'],
              },
            ],
          },
        },
      ],
    },
    DocumentPatch: {
      name: 'DocumentPatch',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        patch: {
          name: 'patch',
          isArray: false,
          type: 'AWSJSON',
          isRequired: true,
          attributes: [],
        },
        documentId: {
          name: 'documentId',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        uniqueEditorInstance: {
          name: 'uniqueEditorInstance',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        author: {
          name: 'author',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'DocumentPatches',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'documentIdIndex',
            fields: ['documentId'],
            queryField: 'patchesByDocumentId',
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Admin'],
                operations: ['read', 'delete'],
              },
              {
                allow: 'private',
                operations: ['create'],
              },
              {
                allow: 'public',
                operations: ['create', 'read', 'update'],
              },
            ],
          },
        },
      ],
    },
    AgentModel: {
      name: 'AgentModel',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        sub: {
          name: 'sub',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        firstName: {
          name: 'firstName',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        lastName: {
          name: 'lastName',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        salutation: {
          name: 'salutation',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        email: {
          name: 'email',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        phone: {
          name: 'phone',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        streetHouseNumber: {
          name: 'streetHouseNumber',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        postCode: {
          name: 'postCode',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        place: {
          name: 'place',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        role: {
          name: 'role',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        emailVerified: {
          name: 'emailVerified',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        active: {
          name: 'active',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        owner: {
          name: 'owner',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        meetingsAsModerator: {
          name: 'meetingsAsModerator',
          isArray: true,
          type: {
            model: 'MeetingModel',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'moderatorId',
          },
        },
      },
      syncable: true,
      pluralName: 'AgentModels',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'bySub',
            fields: ['sub'],
            queryField: 'getAgentBySub',
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'public',
                operations: ['read'],
              },
              {
                provider: 'userPools',
                ownerField: 'sub',
                allow: 'owner',
                operations: ['read', 'update'],
                identityClaim: 'cognito:username',
              },
              {
                provider: 'userPools',
                ownerField: 'owner',
                allow: 'owner',
                operations: ['read', 'update'],
                identityClaim: 'cognito:username',
              },
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Admin', 'Director', 'OfficeManager', 'FinancialAdvisor'],
                operations: ['read', 'create', 'update', 'delete'],
              },
            ],
          },
        },
      ],
    },
    SignatureTokenModel: {
      name: 'SignatureTokenModel',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        pin: {
          name: 'pin',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        documentId: {
          name: 'documentId',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        fieldName: {
          name: 'fieldName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        authorId: {
          name: 'authorId',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'SignatureTokenModels',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byDocumentId',
            fields: ['documentId'],
            queryField: 'getSignatureTokenByDocumentId',
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Admin'],
                operations: ['read', 'update', 'delete'],
              },
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Director', 'OfficeManager', 'AgentLR2', 'AgentLR1', 'AgentR', 'Client', 'FinancialAdvisor'],
                operations: ['read', 'create', 'update'],
              },
              {
                allow: 'public',
                operations: ['read', 'update', 'delete'],
              },
            ],
          },
        },
      ],
    },
  },
  enums: {
    OnlineDocumentType: {
      name: 'OnlineDocumentType',
      values: [
        'INVESTMENT_KOMPASS',
        'EINMALANLAGE_ZEICHNUNGSSCHEIN',
        'EINMALANLAGE_GELDWAESCHEGESETZ',
        'RATIERLICH_ZEICHNUNGSSCHEIN',
        'RATIERLICH_GELDWAESCHEGESETZ',
        'ANGEBOT_IMMOSPAREN',
        'RBS_SCHEIN',
      ],
    },
    OnlineDocumentStatus: {
      name: 'OnlineDocumentStatus',
      values: ['CLEAN', 'INCOMPLETE', 'COMPLETE'],
    },
    ParticipantType: {
      name: 'ParticipantType',
      values: ['AGENT', 'CLIENT'],
    },
  },
  nonModels: {},
  version: 'ab2b0c493527cf32640bc170daf112fd',
};
